; NPS calorimeter cut parameters
; this file: nps_cuts_original.param has single SHMS cal fly's eye (for comparison with existing SHMS cal)

; flag to write blocks hit info to ouput .csv file used for plotting 2D grid of clusters
nps_cal_make_grid = 1

; Select which Clustering Algorithm to use for NPS
; 0 == Use standard SHMS clustering algorithm (developed by Yerevan group)
; 1 == Use Cellular Automata Approach (Same approach is used by Hall A DVCS Calorimeter)
nps_cal_clustering = 0

; for now manually set the FADC mode
;  1 == Use the pulse int - pulse ped
;  2 == Use the sample integral - known ped
;  3 == Use the sample integral - sample ped
; if not set then defaults to use the raw pulse integral

; Threshold on selecting good adc is dynamic pedestal+nps_cal_AdcPosThreshold
nps_cal_arr_ADCmode = 1

; this offset (in ns) is applied to adcPulseTime variable to move away from negative values
;(this may need to be modified for actual NPS data, as an offset may not be neede anymore)
nps_cal_arr_adc_tdc_offset = 200.0

; Threshold on selecting good adc is dynamic pedestal+nps_cal_arr_AdcThreshold
; this threhsold is in units of channels (Im not sure why we need to add this to an existing threshold)
nps_cal_arr_AdcThreshold = 0.


; FADC pulse time window cuts

; varaible below is P.cal.fly.goodAdcTdcDiffTime
; (I added more elements for NPS calorimeter, but am not sure if NPS will use this ADC/TDC time difference since NPS will not have TDC readout)


nps_cal_arr_AdcTimeWindowMin = -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20.,-20.,-20., -20., 
			      -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20.,-20., -20., 
			      -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20.,-20., -20., 
			      -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20.,-20., -20., 
			      -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20.,-20., -20., 
			      -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20.,-20., -20., 
			      -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20.,-20., -20., 
			      -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20.,-20., -20., 
			      -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20.,-20., -20., 
			      -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20.,-20., -20., 
			      -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20.,-20., -20., 
			      -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20.,-20., -20., 
			      -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20.,-20., -20., 
			      -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20., -20.,-20., -20. 


nps_cal_arr_AdcTimeWindowMax = 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 
			       80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 
			       80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 
			       80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 
			       80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 
			       80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 
			       80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 
			       80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 
			       80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 
			       80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 
			       80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 
			       80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 
			       80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 
			       80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80. 

;fADC pulse time window cut parameters are used to place a cut on the adc pulse time window per NPS block during clustering
; Currently this is for testing the NPS clustering algorithm software, and we may eventually not put a
; cut on the adc pulse time, but rather a cut on a difference between the pulse time and some other time.

nps_cal_arr_AdcPulseTimeMin = 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0.,0., 0., 
			      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0., 
			      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0., 
			      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0., 
			      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0., 
			      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0., 
			      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0., 
			      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0., 
			      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0., 
			      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0., 
			      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0., 
			      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0., 
			      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0., 
			      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,0., 0. 


nps_cal_arr_AdcPulseTimeMax = 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 
			       100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 
			       100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 
			       100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 
			       100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 
			       100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 
			       100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 
			       100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 
			       100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 
			       100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 
			       100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 
			       100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 
			       100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 
			       100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100.
			       



; Debug parameters (Do we need these for NPS? Maybe Steve can comment, as we move along with NPS software development)
nps_dbg_init_cal = 0
nps_dbg_decoded_cal = 0
nps_dbg_clusters_cal = 0
nps_dbg_tracks_cal = 0

; Exclusion bandwidth for calorimeter fiducial volume.
nps_cal_fv_delta = 5
